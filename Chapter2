# 1.
# let tentimes x = 10*x;;
# val tentimes : int -> int = <fun>

#2.
# let integersign a b =  a <> 0 && b <> 0;;

#3.
# let rec sum n =
#   if n = 1 then 1 else n + sum n-1;;

# 4.
# let rec power x n =
#  if n = 0 then 1 else
#    (if n = 1 then x else
#      x * power x (n-1));;

# 5.
# let isvowel c =
#   c = 'a' || c = 'e' || c = 'i' || c = 'o' || c = 'u'
# let isconsonant c = not (isvowel c)

# 6.
# let x = 1 in let x = 2 in x + x
# the result will be 2 since 1 = 2 and 2 + 2 = 4

# 7. We could simply return 0 for a negative or zero argument:

# let rec factorial x =
#  if x <= 0 then 0 else
#    if x = 1 then 1 else
#      x * factorial (x - 1);;